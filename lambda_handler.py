import json
import urllib.parse
import boto3
import requests

print('Loading function')

s3 = boto3.client('s3')
mwgscan_endpoint = "http://internal-internalapplications-lb-45278853.us-east-1.elb.amazonaws.com/api/AVScan?"
clean_bucket_name = "clean.dlpbucket.skyhighlabs.net"
dirty_bucket_name = "dirty.dlpbucket.skyhighlabs.net"
# Note source bucket name is includes in the SNS message and extracted from there

def lambda_handler(event, context):
    # Pull the SNS record body from the SQS event
    body = event['Records'][0]['body']
    body_data = json.loads(body)

    # Pull the S3 message from the SNS record body
    message = body_data['Message']
    message_data = json.loads(message)

    # Pull the bucket name and key from the S3 message
    bucket = message_data['Records'][0]['s3']['bucket']['name']
    key = urllib.parse.unquote_plus(message_data['Records'][0]['s3']['object']['key'], encoding='utf-8')

    # Scan and sort the file
    print("New file detected.  Scanning: " + bucket + "/" + key)
    try:
        response = scankey(Bucket=bucket,Key=key)
        response_data = json.loads(response)
        infected = response_data['Infected']

        sortkey(Bucket=bucket,Key=key,Infected=infected)
        return response
    except Exception as e:
        print(e)

        
def scankey(Bucket,Key):
    # Submit file to API for scanning and return the response
    s3scanuri = "s3://" + Bucket + "/" + Key
    try:
        response = requests.get(mwgscan_endpoint + "s3uri=" + s3scanuri)
        print(response.text)
        return response.text
    except Exception as e:
        print(e)

def sortkey(Bucket,Key,Infected):
    # Sort the file into the appropriate bucket depending on malware infecton verdict

    s3 = boto3.resource('s3')

    source_obj = {
    'Bucket': Bucket,
    'Key': Key
    }

    clean_bucket = s3.Bucket(clean_bucket_name)
    dirty_bucket = s3.Bucket(dirty_bucket_name)

    try:
        if Infected == True:
            #Copy file to the dirty bucket
            dirty_bucket.copy(source_obj,Key)
            print("Moving infected file " + Key + " to " + dirty_bucket_name)
        else:
            #Copy file to the clean bucket
            clean_bucket.copy(source_obj,Key)
            print("Moving clean file " + Key + " to " + clean_bucket_name)
        #Delete the original
        obj = s3.Object(Bucket, Key)
        obj.delete()
    except Exception as e:
        print(e)